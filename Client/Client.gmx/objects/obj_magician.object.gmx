<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_leg</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_player</parentName>
  <maskName>spr_leg</maskName>
  <events>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(control == 1){
obj_skill1.skill_index = 0;
obj_skill1.range = 500;
obj_skill2.skill_index = 1;
obj_skill3.skill_index = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// BASIC ATTACK
if (attack_delay &lt;= 0)and(control == 1)and(obj_joy2._distance &gt; 65)and(obj_joy2.activate == 1) {
    if(obj_joy2._direction &gt; 90)and(obj_joy2._direction &lt; 270)
        xdir = -1;
    else
        xdir = 1;
    //weapon_trigger *= -1
    var a = instance_create(x, y - 16 - z, obj_effect);
    a.image_angle = weapon_dir - 47;
    a.sprite_index = spr_effect;
    a.image_single = 1;
    var a = instance_create(x + lengthdir_x(20, weapon_dir), y + lengthdir_y(20, weapon_dir) - 12 - z, obj_bullet);
    a.speed = 5;
    a.direction = weapon_dir;
    a.image_angle = weapon_dir;
    a.image_speed = 0.7;
    a.sprite_index = spr_firehead;
    a.move = irandom_range(2, 7);
    a.effector = 1;
    a.from = global.login_id;
    a.from_team = global.team;
    a.damage = 25;
    a.range = 60;
    
    system.shake = 1;
    weapon_delay = 40;
    weapon_delay_j = 0;
    weapon_range = 10;
    weapon_angle = -140;
    attack_delay = 50;
    
    // 이펙트 만들기
    var buffer = buffer_create(1, buffer_grow, 1);
    buffer_write(buffer, buffer_u8, NN.signal_instance);
    buffer_write(buffer, buffer_u8, 0); // type
    buffer_write(buffer, buffer_u16, x);
    buffer_write(buffer, buffer_u16, y);
    buffer_write(buffer, buffer_s16, weapon_dir);
    nn_send_message(buffer);
    buffer_delete(buffer);
    
    // 화염 만들기
    var buffer = buffer_create(1, buffer_grow, 1);
    buffer_write(buffer, buffer_u8, NN.signal_instance);
    buffer_write(buffer, buffer_u8, 1); // type
    buffer_write(buffer, buffer_u16, x);
    buffer_write(buffer, buffer_u16, y);
    buffer_write(buffer, buffer_u8, a.speed);
    buffer_write(buffer, buffer_s16, weapon_dir);
    buffer_write(buffer, buffer_s16, a.direction);
    buffer_write(buffer, buffer_s16, a.image_speed);
    buffer_write(buffer, buffer_s16, a.sprite_index);
    buffer_write(buffer, buffer_s8, a.move);
    buffer_write(buffer, buffer_s16, a.effector);
    buffer_write(buffer, buffer_s16, a.range);
    buffer_write_string(buffer, global.login_id);
    buffer_write_string(buffer, global.team);
    buffer_write(buffer, buffer_s16, a.damage);
    nn_send_message(buffer);
    buffer_delete(buffer);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// BASIC ATTACK
if (global.skill_delay[3] &lt;= 0)
{
    if (mouse_x &gt; x)
        xdir = 1;
    else if(mouse_x &lt; x)
        xdir = -1;
    //weapon_trigger *= -1
    var a = instance_create(x, y - 16 - z, obj_effect);
    a.image_angle = weapon_dir - 47;
    a.sprite_index = spr_effect;
    a.image_single = 1;
    var i;
    for(i = 0; i &lt; 360/20; i++)
    {
        var a = instance_create(x + lengthdir_x(50, i*20), y + lengthdir_y(50, i*20) - 12 - z, obj_bullet);
        a.speed = 5;
        a.direction = i*20;
        a.image_angle = i*20;
        a.image_speed = 0.7;
        a.sprite_index = spr_firehead;
        a.move = irandom_range(2, 7);
        a.sprite = spr_fire;
        a.damage = 2;
        a.from_team = global.team;
        
        var json_data = ds_map_create();
        ds_map_add(json_data, "id", NN.signal_instance);
        var json_data_weapon = ds_map_create();
        ds_map_add(json_data_weapon, "type", 2);
        ds_map_add(json_data_weapon, "speed", a.speed);
        ds_map_add(json_data_weapon, "weapon_dir", weapon_dir);
        ds_map_add(json_data_weapon, "direction", a.direction);
        ds_map_add(json_data_weapon, "image_speed", a.image_speed);
        ds_map_add(json_data_weapon, "sprite_index", a.sprite_index);
        ds_map_add(json_data_weapon, "move", a.move);
        ds_map_add(json_data_weapon, "sprite", a.sprite);
        ds_map_add(json_data_weapon, "x", x );
        ds_map_add(json_data_weapon, "y", y );
        ds_map_add(json_data_weapon, "i", i );
        ds_map_add(json_data_weapon, "from", global.login_id);
        ds_map_add(json_data_weapon, "damage", a.damage);
        ds_map_add(json_data_weapon, "team", global.team);
        ds_map_add(json_data, "msg", json_encode(json_data_weapon));
        ds_map_destroy(json_data_weapon);
        var body = json_encode(json_data);
        ds_map_destroy(json_data);
        nn_send_message(body);
    }
    
    var json_data = ds_map_create();
    ds_map_add(json_data, "id", NN.signal_instance);
    var json_data_weapon = ds_map_create();
    ds_map_add(json_data_weapon, "type", 0);
    ds_map_add(json_data_weapon, "speed", a.speed);
    ds_map_add(json_data_weapon, "weapon_dir", weapon_dir);
    ds_map_add(json_data_weapon, "direction", a.direction);
    ds_map_add(json_data_weapon, "image_speed", a.image_speed);
    ds_map_add(json_data_weapon, "sprite_index", a.sprite_index);
    ds_map_add(json_data_weapon, "move", a.move);
    ds_map_add(json_data_weapon, "sprite", a.sprite);
    ds_map_add(json_data_weapon, "x", x);
    ds_map_add(json_data_weapon, "y", y);
    ds_map_add(json_data_weapon, "from", global.login_id);
    ds_map_add(json_data_weapon, "damage", a.damage);
    ds_map_add(json_data_weapon, "team", global.team);
    ds_map_add(json_data, "msg", json_encode(json_data_weapon));
    ds_map_destroy(json_data_weapon);
    var body = json_encode(json_data);
    ds_map_destroy(json_data);
    nn_send_message(body);
    system.shake = 1;
    weapon_delay = 40;
    weapon_delay_j = 0;
    weapon_range = 10;
    weapon_angle = -140;
    attack_delay = 50;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CREATE EVENT

// setting
control = 0;
weapon_index = 3;
type = 4;
character_img = 4;


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,32</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
