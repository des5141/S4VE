<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bullet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>all_unit</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DEFAULT INIT
move      = 0;
effector  = -1;
turn      = -1;
from      = -1; // 누구에게서 왔나?
damage    = 0;  // 데미지
range     = -1;
from_team = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var move2 = move + sprite_width/3;
repeat(2)
{
    var a = instance_create(x + irandom_range(-move2, move2), y + irandom_range(-move2, move2), obj_effect1);
    a.direction = direction;
    a.image_angle = image_angle;
    if(effector == 1)
    {
        a.sprite_index = sprite;
        a.image_speed = image_speed;
        a.image_xscale = random_range(0.2, 1);
        a.image_yscale = a.image_xscale;
    }
}
if(turn) {
    image_angle++;
    if(image_angle &gt; 360) {
        image_angle = 0;
    }
}

if(range &lt;= 0) {
    instance_destroy();
}else {
    range--;
}

/*if(collision_line(xprevious, yprevious, x, y, par_player, 1, 0)) {
    event_perform(ev_collision, par_player);
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// EFFECT
switch(sprite_index){
    case spr_fireball:
        repeat(50) {
            var a = instance_create(x, y, obj_boomeffect);
            a.image_xscale = irandom(30);
            a.image_yscale = image_xscale;
        }
    break;
    
    case spr_firehead:
        repeat(50) {
            var a = instance_create(x, y, obj_boomeffect);
        }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="par_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// damage
if(other.team != "")and(from_team != other.team)and(from != other.user_id)and(other.respawn == -1) {
    if(other.control == 0)and(from == global.login_id){
        var json_data = ds_map_create();
        ds_map_add(json_data, "id", NN.signal_hp);
        ds_map_add(json_data, "msg", damage);
        ds_map_add(json_data, "who", other.user_id);
        var body = json_encode(json_data);
        ds_map_destroy(json_data);
        nn_send_message(body);
        
        if(other.hp - damage &lt;= 0) {
            var json_data = ds_map_create();
            ds_map_add(json_data, "id", NN.signal_kill_log);
            ds_map_add(json_data, "a", global.nickname);
            ds_map_add(json_data, "b", other.nickname);
            var body = json_encode(json_data);
            ds_map_destroy(json_data);
            nn_send_message(body);
        }
    }
    
    switch(sprite_index){
        case spr_fireball:
            repeat(50) {
                var a = instance_create(x, y, obj_boomeffect);
                a.image_xscale = irandom(30);
                a.image_yscale = image_xscale;
            }
        break;
        
        case spr_firehead:
            repeat(50) {
                var a = instance_create(x, y, obj_boomeffect);
            }
        break;
    }
    
    if(other.control == 1) {
        system.shake = 2;
        var _x = other.x, _y = other.y;
        _x += lengthdir_x(10, direction);
        _y += lengthdir_y(10, direction);
        
        if (collision_circle(_x, _y, 16, par_block, false, true) == noone) {
            other.x = _x;
            other.y = _y;
        }
    }
    
    other.damaged = 1;
    with(other){alarm[0] = 20;}
    var ins = instance_create(x, y - 16, obj_effect5);
    obj_effect5.message = damage;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>2,2</point>
    <point>2,2</point>
  </PhysicsShapePoints>
</object>
